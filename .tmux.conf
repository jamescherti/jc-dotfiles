# Description: Tmux configuration.
# Author: James Cherti
# URL: https://github.com/jamescherti/jc-dotfiles
# Requirements:
#   - bash-stdops: https://github.com/jamescherti/bash-stdops
#     (bash-stdops is for the clipboard)
#
#  ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓
#
#  ██████████ ████     ████ ██     ██ ██     ██
# ░░░░░██░░░ ░██░██   ██░██░██    ░██░░██   ██
#     ░██    ░██░░██ ██ ░██░██    ░██ ░░██ ██
#     ░██    ░██ ░░███  ░██░██    ░██  ░░███
#     ░██    ░██  ░░█   ░██░██    ░██   ██░██
#     ░██    ░██   ░    ░██░██    ░██  ██ ░░██
#     ░██    ░██        ░██░░███████  ██   ░░██
#     ░░     ░░         ░░  ░░░░░░░  ░░     ░░
#
#  ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓
#
# License:
# --------
# Distributed under terms of the MIT license.
#
# Copyright (C) 2004-2024 James Cherti
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the “Software”), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
# List all key mappings:
# ----------------------
# tmux list-keys
#===================================================================================

# True colors
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*256col*:Tc"
set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'
set-environment -g COLORTERM "truecolor"
set-option -g cursor-style bar

# Force UTF-8
set-window-option -gq utf8 on
set-option -gq status-utf8 on

# PERF: Disable automatic window renaming. By default, tmux automatically
# renames windows based on the active program's name. This can introduce some
# overhead.
set-option -g allow-rename off

# Increase history limit
set-option -g history-limit 5000000

# PERF: Redraw status line every N seconds (default 15)
set-option -g status-interval 45

# PERF: Reduce synchronization: By default, tmux synchronizes the pane contents
# across all connected clients. This synchronization can cause additional
# overhead.
set-option -g synchronize-panes off

# Tmux messages are displayed for N milliseconds
set-option -g display-time 3000

# Remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Show notices when there is activity on another window
set-window-option -g monitor-activity off

# Capture
bind-key P command-prompt -p 'save history to filename:' -I '~/tmux.history' 'capture-pane -S -1000000000; save-buffer %1 ; delete-buffer'

# Quiet
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-option -g bell-action none

# Hjkl
# bind -n M-h left

# bind -n M-h select-pane -L
# bind -n M-l select-pane -R
# bind -n M-k select-pane -U
# bind -n M-j select-pane -D

# reload config file (change file location to your the tmux.conf you want to use)
bind r source-file ~/.tmux.conf \;\
    display-message 'Reload ~/.tmux.conf'

# split panes using | and -
bind | split-window -h
bind - split-window -v
#unbind '"'
#unbind %

# Mode key vi
set-window-option -g mode-keys vi
set-option -g status-keys vi
# set-option -g mode-keys emacs
# set-option -g status-keys emacs

# Focus events enabled for terminals that support them
set-option -s focus-events on

# Aggressive resizing leads windows to adjust only to the smallest active client
# within a group or on multiple monitors, which can be useful when utilizing
# grouped sessions and setting up with multiple displays.
set-window-option -g aggressive-resize on

# Select
unbind v
bind-key v copy-mode
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi V send-keys -X select-line
bind-key -T copy-mode-vi 'C-v' send -X rectangle-toggle
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi Space send -X cancel
bind -T copy-mode-vi H send -X start-of-line
bind -T copy-mode-vi L send -X end-of-line

# Copy
# NOTE: tmux-cbpaste cbcopy can be found here:
# https://github.com/jamescherti/bash-stdops
bind-key p run '~/.local/bin/tmux-cbpaste'
bind-key -T copy-mode-vi y send-keys -X copy-pipe "~/.local/bin/cbcopy"
unbind -n -Tcopy-mode-vi MouseDragEnd1Pane
unbind-key MouseDown2Pane

# Word separators
set-window-option -g word-separators ' "=()[]:'
set-window-option -ag word-separators "'"

# PERF: Adjust mouse mode in tmux if experiencing performance issues: To potentially
# enhance tmux responsiveness.
# set-option -g mouse off

# Toggle mouse on
bind-key m \
  set-option -g mouse on \;\
  display-message 'Mouse: ON'

# Toggle mouse off
bind-key M \
  set-option -g mouse off \;\
  display-message 'Mouse: OFF'

# status bar
set-option -g status-bg colour235
set-option -g status-fg colour240
set-option -g window-status-format "[#W]"
set-option -g window-status-current-format "#[bg=colour236,fg=colour242][#W]"
set-option -g status-right ''

# next and previous Window
bind e split-window -h
bind o split-window -v

# Next and previous window
if-shell "uname | grep -q Darwin" 'bind-key -n C-Left previous-window'
if-shell "uname | grep -q Darwin" 'bind-key -n C-Right next-window'
if-shell "uname | grep -q Linux" 'bind -n M-Left  previous-window'
if-shell "uname | grep -q Linux" 'bind -n M-Right next-window'

# Move window left/right
if-shell "uname | grep -q Darwin" 'bind-key -n C-Up swap-window -t -1\; previous-window'
if-shell "uname | grep -q Darwin" 'bind-key -n C-Down swap-window -t +1\; next-window'
if-shell "uname | grep -q Linux" 'bind-key -n M-Up swap-window -t -1\; previous-window'
if-shell "uname | grep -q Linux" 'bind-key -n M-Down swap-window -t +1\; next-window'

bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Bind-key K kill-pane
bind K confirm kill-pane
# bind-key -r K confirm-before -p "Kill pane? (y/n)" kill-pane
# bind -r [ select-pane -t :.-
# bind -r ] select-pane -t :.+

# No delay for escape key press address vim mode switching delay
set-option -sg escape-time 0

# Start window / pane index at 1
set-option -g base-index 1
set-window-option -g pane-base-index 1

# Clock mode
set-option -g clock-mode-colour white
set-option -g clock-mode-style 24

# Don't close windows
set-option -g remain-on-exit off
bind X kill-window

# Renumber windows when a window is closed
set-option -g renumber-windows on

# Allow multiple commands to be entered without pressing the prefix-key again
# within the specified time milliseconds (Default: 500). Whether a key
# repeats may be set by using the `-r` flag when binding a command, as is
# currently enabled for default keys bound to the `resize-pane` command.
set-option -sg repeat-time 600

# Set terminal title
set-option -g set-titles off

# Don't wrap searches; it's super confusing given tmux's reverse-ordering of
# position info in copy mode.
set-option -w -g wrap-search off

# Make sure we always start at 1, even when invoked from a .tmux wrapper script.
set-environment -g SHLVL 1

# resize panes
#bind-key -r J resize-pane -D 1
#bind-key -r K resize-pane -U 1
#bind-key -r H resize-pane -L 1
#bind-key -r L resize-pane -R 1

set-option -g window-style 'fg=colour250,bg=#000000'
set-option -g window-active-style 'fg=colour255,bg=#000000'
set-option -g pane-border-style 'fg=colour240,bg=#000000'
set-option -g pane-active-border-style 'fg=colour240,bg=#000000'

### set status bar
set-option -g status-right '<#S>'
set-option -g status-left ''
